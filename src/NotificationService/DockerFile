FROM mcr.microsoft.com/dotnet/sdk:8.0 as build

WORKDIR /app
EXPOSE 8080

#copy all .csproj files and restore as distinct layers. Use of the same copy
#commmands for every dockerfile in the project to take advantage of docker cashing

COPY AutoBidHub.sln  AutoBidHub.sln
COPY src/AuctionService/AuctionService.csproj src/AuctionService/AuctionService.csproj
COPY src/SearchService/SearchService.csproj src/SearchService/SearchService.csproj
COPY src/BiddingService/BiddingService.csproj src/BiddingService/BiddingService.csproj
COPY src/NotificationService/NotificationService.csproj src/NotificationService/NotificationService.csproj
COPY src/IdentityService/IdentityService.csproj src/IdentityService/IdentityService.csproj
COPY src/GatewayService/GatewayService.csproj src/GatewayService/GatewayService.csproj
COPY src/Contracts/Contracts.csproj src/Contracts/Contracts.csproj

#restore the package deps

RUN dotnet restore AutoBidHub.sln

#copy the app folders over

COPY src/NotificationService src/NotificationService
COPY src/Contracts src/Contracts

WORKDIR /app/src/NotificationService
RUN dotnet publish -c Release -o /app/src/out

# build runtime image

FROM mcr.microsoft.com/dotnet/aspnet:8.0
WORKDIR /app
COPY --from=build /app/src/out .
ENTRYPOINT [ "dotnet","NotificationService.dll" ]